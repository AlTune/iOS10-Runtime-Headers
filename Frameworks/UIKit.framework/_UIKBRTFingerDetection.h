/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIKBRTFingerDetection : _UIKBRTKeyboardTouchObserver {
    struct CGPoint { 
        double x; 
        double y; 
    }  _fCenter;
    _UIKBRTFingerInfo * _fakeLeftIndex;
    _UIKBRTFingerInfo * _fakeRightIndex;
    UIView * _feedbackParentView;
    _UIKBRTFingerDetectionView * _feedbackView;
    NSMapTable * _fingerFeedbackViewMap;
    int  _homeRowOffsetIndex;
    struct CGPoint { 
        double x; 
        double y; 
    }  _jCenter;
    struct CGSize { 
        double width; 
        double height; 
    }  _keySize;
    NSMutableDictionary * _touches;
}

@property (nonatomic) struct CGPoint { double x1; double x2; } fCenter;
@property (nonatomic, retain) _UIKBRTFingerInfo *fakeLeftIndex;
@property (nonatomic, retain) _UIKBRTFingerInfo *fakeRightIndex;
@property (nonatomic) UIView *feedbackParentView;
@property (nonatomic, retain) _UIKBRTFingerDetectionView *feedbackView;
@property (nonatomic, retain) NSMapTable *fingerFeedbackViewMap;
@property (nonatomic) int homeRowOffsetIndex;
@property (nonatomic) struct CGPoint { double x1; double x2; } jCenter;
@property (nonatomic) struct CGSize { double x1; double x2; } keySize;
@property (nonatomic, retain) NSMutableDictionary *touches;

- (void).cxx_destruct;
- (void)_updateFingerFeedback;
- (void)_updateFingerFeedback:(id)arg1;
- (void)_updateTouchInfo;
- (void)addTouchLocation:(struct CGPoint { double x1; double x2; })arg1 withRadius:(double)arg2 withTouchTime:(double)arg3 withIdentifier:(id)arg4;
- (void)dealloc;
- (struct CGPoint { double x1; double x2; })fCenter;
- (id)fakeLeftIndex;
- (id)fakeRightIndex;
- (id)feedbackParentView;
- (id)feedbackView;
- (id)fingerFeedbackViewMap;
- (unsigned long long)fingerIdForTouchWithIdentifier:(id)arg1;
- (id)fingerIdsRelatedToTouchWithIdentifier:(id)arg1 sinceTimestamp:(double)arg2 includeThumbs:(bool)arg3;
- (int)homeRowOffsetIndex;
- (id)init;
- (id)initWithParentView:(id)arg1;
- (struct CGPoint { double x1; double x2; })jCenter;
- (struct CGSize { double x1; double x2; })keySize;
- (void)moveTouchWithIdentifier:(id)arg1 toLocation:(struct CGPoint { double x1; double x2; })arg2 withRadius:(double)arg3 atTouchTime:(double)arg4;
- (void)removeTouchWithIdentifier:(id)arg1 touchCancelled:(bool)arg2;
- (void)reset;
- (void)setFCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFakeLeftIndex:(id)arg1;
- (void)setFakeRightIndex:(id)arg1;
- (void)setFeedbackParentView:(id)arg1;
- (void)setFeedbackView:(id)arg1;
- (void)setFingerFeedbackViewMap:(id)arg1;
- (void)setHomeRowOffsetIndex:(int)arg1;
- (void)setJCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setKeySize:(struct CGSize { double x1; double x2; })arg1;
- (void)setTouches:(id)arg1;
- (id)touchIdentifiersForFingerId:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })touchLocationForFingerId:(unsigned long long)arg1;
- (id)touches;
- (void)updateWithFCenter:(struct CGPoint { double x1; double x2; })arg1 jCenter:(struct CGPoint { double x1; double x2; })arg2 keySize:(struct CGSize { double x1; double x2; })arg3 rowOffsets:(id)arg4 homeRowOffsetIndex:(int)arg5;

@end
