/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface _UIPreviewInteractionForceLevelClassifier : _UIForceLevelClassifier {
    double  _actualHintForce;
    double  _actualHintTime;
    double  _actualPeekForce;
    double  _actualPeekTime;
    double  _actualPopForce;
    double  _actualPopTime;
    bool  _allowsPopOffsetDecay;
    double  _currentTime;
    double  _highPopThreshold;
    double  _hintAndPeekInterval;
    double  _hintReductionForce;
    double  _lowpassForceAlpha;
    double  _maximumForce;
    unsigned long long  _peekPopCount;
    double  _popAlwaysThreshold;
    double  _popDecayingOffset;
    double  _popForceReductionThreshold;
    double  _popOffsetDecayAlpha;
    double  _popOffsetInitial;
    double  _popOffsetLongterm;
    double  _popReductionForce;
    double  _previousPopThreshold;
    double  _previousTime;
    double  _progressToStrongThreshold;
    double  _revealThreshold;
    double  _saturationForce;
    double  _smoothedForce;
    double  _standardThreshold;
    double  _strongThreshold;
    double  _timeMark;
    double  _transitionInterval;
}

@property (nonatomic, readonly) double actualHintForce;
@property (nonatomic, readonly) double actualHintTime;
@property (nonatomic, readonly) double actualPeekForce;
@property (nonatomic, readonly) double actualPeekTime;
@property (nonatomic, readonly) double actualPopForce;
@property (nonatomic, readonly) double actualPopTime;
@property (nonatomic) double hintAndPeekInterval;
@property (nonatomic) double hintReductionForce;
@property (nonatomic, readonly) unsigned long long peekPopCount;
@property (nonatomic) double revealThreshold;
@property (nonatomic) double standardThreshold;
@property (nonatomic) double strongThreshold;
@property (nonatomic) double transitionInterval;

- (double)_calculateProgressOfTouchForceValue:(double)arg1 toForceLevel:(long long)arg2 minimumRequiredForceLevel:(long long)arg3;
- (double)_denormalizedTouchForceValue:(double)arg1;
- (long long)_forceLevelForTouchForceValue:(double)arg1;
- (double)_normalizedTouchForceValue:(double)arg1;
- (double)_thresholdForForceLevel:(long long)arg1;
- (double)actualHintForce;
- (double)actualHintTime;
- (double)actualPeekForce;
- (double)actualPeekTime;
- (double)actualPopForce;
- (double)actualPopTime;
- (double)hintAndPeekInterval;
- (double)hintReductionForce;
- (id)init;
- (void)observeTouchWithForceValue:(double)arg1 atTimestamp:(double)arg2 withCentroidAtLocation:(struct CGPoint { double x1; double x2; })arg3;
- (unsigned long long)peekPopCount;
- (void)reset;
- (double)revealThreshold;
- (void)setHintAndPeekInterval:(double)arg1;
- (void)setHintReductionForce:(double)arg1;
- (void)setRevealThreshold:(double)arg1;
- (void)setStandardThreshold:(double)arg1;
- (void)setStrongThreshold:(double)arg1;
- (void)setTransitionInterval:(double)arg1;
- (double)standardThreshold;
- (double)strongThreshold;
- (void)touchForceMultiplierDidChange;
- (id)transformerFromTouchForceMessageToProgressToForceLevel:(long long)arg1 minimumRequiredForceLevel:(long long)arg2;
- (double)transitionInterval;
- (bool)wantsUnclampedForceValues;

@end
