/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCameraIDSDeviceConnection : NSObject <HMDCameraRemoteStreamProtocol, HMFLogging, HMFTimerDelegate, IDSServiceDelegate> {
    IDSDevice * _device;
    IDSService * _idsProxyStreamService;
    HMFTimer * _keepAliveByteReceiveTimeoutTimer;
    HMFTimer * _keepAliveByteSendTimer;
    IDSDeviceConnection * _keepAliveConnection;
    NSString * _sessionID;
    NSObject<OS_dispatch_source> * _socketReceiveSource;
    NSObject<OS_dispatch_source> * _socketSendSource;
    IDSDeviceConnection * _watchAudioConnection;
    IDSDeviceConnection * _watchVideoConnection;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) IDSDevice *device;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) IDSService *idsProxyStreamService;
@property (nonatomic, retain) HMFTimer *keepAliveByteReceiveTimeoutTimer;
@property (nonatomic, retain) HMFTimer *keepAliveByteSendTimer;
@property (nonatomic, retain) IDSDeviceConnection *keepAliveConnection;
@property (nonatomic, readonly) NSString *sessionID;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *socketReceiveSource;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *socketSendSource;
@property (readonly) Class superclass;
@property (nonatomic, retain) IDSDeviceConnection *watchAudioConnection;
@property (nonatomic, retain) IDSDeviceConnection *watchVideoConnection;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_callSessionEnded:(id)arg1;
- (void)_createStreamSocket;
- (void)_receiveByteCheckTimerFired;
- (void)_reset;
- (void)_sendTimerFired;
- (void)_setReceiveByteHandler;
- (void)_socketOpened:(id)arg1;
- (void)_startKeepAliveByteSendTimer;
- (void)_startKeepAliveTimeoutTimer;
- (id)device;
- (id)idsProxyStreamService;
- (id)initWithSessionID:(id)arg1;
- (id)keepAliveByteReceiveTimeoutTimer;
- (id)keepAliveByteSendTimer;
- (id)keepAliveConnection;
- (id)logIdentifier;
- (void)reset;
- (id)sessionID;
- (void)setDevice:(id)arg1;
- (void)setKeepAliveByteReceiveTimeoutTimer:(id)arg1;
- (void)setKeepAliveByteSendTimer:(id)arg1;
- (void)setKeepAliveConnection:(id)arg1;
- (void)setSocketReceiveSource:(id)arg1;
- (void)setSocketSendSource:(id)arg1;
- (void)setWatchAudioConnection:(id)arg1;
- (void)setWatchVideoConnection:(id)arg1;
- (id)socketReceiveSource;
- (id)socketSendSource;
- (void)startKeepAlive;
- (void)timerDidFire:(id)arg1;
- (id)watchAudioConnection;
- (id)watchVideoConnection;
- (id)workQueue;

@end
