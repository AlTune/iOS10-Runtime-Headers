/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDResidentMesh : NSObject <HMFLogging, HMFMessageReceiver> {
    HMDAccountRegistry * _accountRegistry;
    unsigned long long  _broadcastRate;
    bool  _disableMesh;
    HMDHomeManager * _homeManager;
    NSMutableArray * _internalMesh;
    HMFMessageDispatcher * _messageDispatcher;
    HMDResidentMeshStorage * _ourStorage;
    HMDCentralMessageDispatcher * _remoteMessageDispatcher;
    NSUUID * _uuid;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic) HMDAccountRegistry *accountRegistry;
@property unsigned long long broadcastRate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableMesh;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMDHomeManager *homeManager;
@property (nonatomic, retain) NSMutableArray *internalMesh;
@property (nonatomic) HMFMessageDispatcher *messageDispatcher;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic) HMDResidentMeshStorage *ourStorage;
@property (nonatomic) HMDCentralMessageDispatcher *remoteMessageDispatcher;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSUUID *uuid;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_accessoryIsNotReachable:(id)arg1;
- (void)_accessoryIsReachable:(id)arg1;
- (void)_addConnectivityFromDeviceToAccessory:(id)arg1;
- (void)_addDevice:(id)arg1;
- (id)_buildMessageForDevice:(id)arg1;
- (void)_deviceResidentChanged:(id)arg1;
- (void)_handleMeshUpdateMessage:(id)arg1;
- (void)_handleMeshUpdateRequestMessage:(id)arg1;
- (void)_queueBroadcastForDevice:(id)arg1 forceBroadcast:(bool)arg2;
- (void)_rdmAddResident:(id)arg1;
- (void)_rdmRemoveResident:(id)arg1;
- (void)_rdmUpdateResident:(id)arg1;
- (void)_removeConnectivityFromDeviceToAccessory:(id)arg1;
- (void)_removeDevice:(id)arg1;
- (void)_sendMessage:(id)arg1 payload:(id)arg2 target:(id)arg3 responseHandler:(id /* block */)arg4;
- (bool)_setEnabled:(bool)arg1 forDevice:(id)arg2;
- (void)_setPreferredDevice:(id)arg1;
- (void)_updateDevice:(id)arg1;
- (void)_updateDeviceResponse:(id)arg1 error:(id)arg2;
- (void)_updateMesh:(id)arg1;
- (void)_updateMeshResponse:(id)arg1 error:(id)arg2;
- (id)accountRegistry;
- (void)addDevice:(id)arg1;
- (unsigned long long)broadcastRate;
- (void)dealloc;
- (id)deviceForAccessory:(id)arg1;
- (bool)disableMesh;
- (void)dumpDebug;
- (id)dumpState;
- (id)homeManager;
- (id)initWithHomeManager:(id)arg1 residentEnabled:(bool)arg2;
- (id)internalMesh;
- (id)logIdentifier;
- (id)messageDispatcher;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)ourStorage;
- (id)remoteMessageDispatcher;
- (void)removeDevice:(id)arg1;
- (void)setAccountRegistry:(id)arg1;
- (void)setBroadcastRate:(unsigned long long)arg1;
- (void)setDisableMesh:(bool)arg1;
- (void)setEnabled:(bool)arg1 forDevice:(id)arg2;
- (void)setInternalMesh:(id)arg1;
- (void)setMessageDispatcher:(id)arg1;
- (void)setOurStorage:(id)arg1;
- (void)setPreferredDevice:(id)arg1;
- (void)setRemoteMessageDispatcher:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)uuid;
- (id)workQueue;

@end
