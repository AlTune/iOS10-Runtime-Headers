/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport
 */

@interface NTPBTagRecord : PBCodable <NSCopying> {
    long long  _allowedAdTypes;
    NSMutableArray * _allowedStorefrontIds;
    NTPBRecordBase * _base;
    NSMutableArray * _blockedStorefrontIds;
    NSString * _channelDefaultSectionId;
    NSMutableArray * _channelSectionIds;
    long long  _contentProvider;
    NSString * _coverImageUrl;
    NTPBFeedConfiguration * _feedConfiguration;
    unsigned long long  _forYouCutoffTime;
    unsigned long long  _forYouMaximumArticleCount;
    struct { 
        unsigned int allowedAdTypes : 1; 
        unsigned int contentProvider : 1; 
        unsigned int forYouCutoffTime : 1; 
        unsigned int forYouMaximumArticleCount : 1; 
        unsigned int score : 1; 
        unsigned int tagNameImageBaselineShift : 1; 
        unsigned int tagNameImageScaleFactor : 1; 
        unsigned int type : 1; 
        unsigned int isDeprecated : 1; 
        unsigned int isExplicitContent : 1; 
        unsigned int isNotificationEnabled : 1; 
        unsigned int isPublic : 1; 
        unsigned int publisherPaidLeakyPaywallOptOut : 1; 
        unsigned int publisherPaidWebOptIn : 1; 
    }  _has;
    NSMutableArray * _iAdCategories;
    NSMutableArray * _iAdKeywords;
    bool  _isDeprecated;
    bool  _isExplicitContent;
    bool  _isNotificationEnabled;
    bool  _isPublic;
    NSString * _logoUrl;
    NSString * _minimumNewsVersion;
    NSString * _name;
    NSString * _nameImageForDarkBackgroundUrl;
    NSString * _nameImageMaskUrl;
    NSData * _nameImageMetadata;
    NSString * _nameImageUrl;
    NSString * _parentId;
    NSMutableArray * _pinnedArticleIds;
    NSString * _primaryAudience;
    NSString * _publisherPaidAuthorizationUrl;
    NSMutableArray * _publisherPaidFeldsparablePurchaseIds;
    bool  _publisherPaidLeakyPaywallOptOut;
    NSString * _publisherPaidVerificationUrl;
    bool  _publisherPaidWebOptIn;
    NSString * _publisherPaidWebaccessUrl;
    NSMutableArray * _purchaseOfferableConfigurations;
    NSMutableArray * _relatedChannelIds;
    NSMutableArray * _relatedChannelIdsForOnboardings;
    NSMutableArray * _relatedTopicIds;
    NSMutableArray * _relatedTopicIdsForOnboardings;
    NSString * _replacementId;
    long long  _score;
    unsigned long long  _tagNameImageBaselineShift;
    double  _tagNameImageScaleFactor;
    NSString * _templateJson;
    int  _type;
}

@property (nonatomic) long long allowedAdTypes;
@property (nonatomic, retain) NSMutableArray *allowedStorefrontIds;
@property (nonatomic, retain) NTPBRecordBase *base;
@property (nonatomic, retain) NSMutableArray *blockedStorefrontIds;
@property (nonatomic, retain) NSString *channelDefaultSectionId;
@property (nonatomic, retain) NSMutableArray *channelSectionIds;
@property (nonatomic) long long contentProvider;
@property (nonatomic, retain) NSString *coverImageUrl;
@property (nonatomic, retain) NTPBFeedConfiguration *feedConfiguration;
@property (nonatomic) unsigned long long forYouCutoffTime;
@property (nonatomic) unsigned long long forYouMaximumArticleCount;
@property (nonatomic) bool hasAllowedAdTypes;
@property (nonatomic, readonly) bool hasBase;
@property (nonatomic, readonly) bool hasChannelDefaultSectionId;
@property (nonatomic) bool hasContentProvider;
@property (nonatomic, readonly) bool hasCoverImageUrl;
@property (nonatomic, readonly) bool hasFeedConfiguration;
@property (nonatomic) bool hasForYouCutoffTime;
@property (nonatomic) bool hasForYouMaximumArticleCount;
@property (nonatomic) bool hasIsDeprecated;
@property (nonatomic) bool hasIsExplicitContent;
@property (nonatomic) bool hasIsNotificationEnabled;
@property (nonatomic) bool hasIsPublic;
@property (nonatomic, readonly) bool hasLogoUrl;
@property (nonatomic, readonly) bool hasMinimumNewsVersion;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic, readonly) bool hasNameImageForDarkBackgroundUrl;
@property (nonatomic, readonly) bool hasNameImageMaskUrl;
@property (nonatomic, readonly) bool hasNameImageMetadata;
@property (nonatomic, readonly) bool hasNameImageUrl;
@property (nonatomic, readonly) bool hasParentId;
@property (nonatomic, readonly) bool hasPrimaryAudience;
@property (nonatomic, readonly) bool hasPublisherPaidAuthorizationUrl;
@property (nonatomic) bool hasPublisherPaidLeakyPaywallOptOut;
@property (nonatomic, readonly) bool hasPublisherPaidVerificationUrl;
@property (nonatomic) bool hasPublisherPaidWebOptIn;
@property (nonatomic, readonly) bool hasPublisherPaidWebaccessUrl;
@property (nonatomic, readonly) bool hasReplacementId;
@property (nonatomic) bool hasScore;
@property (nonatomic) bool hasTagNameImageBaselineShift;
@property (nonatomic) bool hasTagNameImageScaleFactor;
@property (nonatomic, readonly) bool hasTemplateJson;
@property (nonatomic) bool hasType;
@property (nonatomic, retain) NSMutableArray *iAdCategories;
@property (nonatomic, retain) NSMutableArray *iAdKeywords;
@property (nonatomic) bool isDeprecated;
@property (nonatomic) bool isExplicitContent;
@property (nonatomic) bool isNotificationEnabled;
@property (nonatomic) bool isPublic;
@property (nonatomic, retain) NSString *logoUrl;
@property (nonatomic, retain) NSString *minimumNewsVersion;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSString *nameImageForDarkBackgroundUrl;
@property (nonatomic, retain) NSString *nameImageMaskUrl;
@property (nonatomic, retain) NSData *nameImageMetadata;
@property (nonatomic, retain) NSString *nameImageUrl;
@property (nonatomic, retain) NSString *parentId;
@property (nonatomic, retain) NSMutableArray *pinnedArticleIds;
@property (nonatomic, retain) NSString *primaryAudience;
@property (nonatomic, retain) NSString *publisherPaidAuthorizationUrl;
@property (nonatomic, retain) NSMutableArray *publisherPaidFeldsparablePurchaseIds;
@property (nonatomic) bool publisherPaidLeakyPaywallOptOut;
@property (nonatomic, retain) NSString *publisherPaidVerificationUrl;
@property (nonatomic) bool publisherPaidWebOptIn;
@property (nonatomic, retain) NSString *publisherPaidWebaccessUrl;
@property (nonatomic, retain) NSMutableArray *purchaseOfferableConfigurations;
@property (nonatomic, retain) NSMutableArray *relatedChannelIds;
@property (nonatomic, retain) NSMutableArray *relatedChannelIdsForOnboardings;
@property (nonatomic, retain) NSMutableArray *relatedTopicIds;
@property (nonatomic, retain) NSMutableArray *relatedTopicIdsForOnboardings;
@property (nonatomic, retain) NSString *replacementId;
@property (nonatomic) long long score;
@property (nonatomic) unsigned long long tagNameImageBaselineShift;
@property (nonatomic) double tagNameImageScaleFactor;
@property (nonatomic, retain) NSString *templateJson;
@property (nonatomic) int type;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

+ (Class)allowedStorefrontIdsType;
+ (Class)blockedStorefrontIdsType;
+ (Class)channelSectionIdsType;
+ (Class)iAdCategoriesType;
+ (Class)iAdKeywordsType;
+ (Class)pinnedArticleIdsType;
+ (Class)publisherPaidFeldsparablePurchaseIdsType;
+ (Class)purchaseOfferableConfigurationType;
+ (Class)relatedChannelIdsForOnboardingType;
+ (Class)relatedChannelIdsType;
+ (Class)relatedTopicIdsForOnboardingType;
+ (Class)relatedTopicIdsType;

- (void)addAllowedStorefrontIds:(id)arg1;
- (void)addBlockedStorefrontIds:(id)arg1;
- (void)addChannelSectionIds:(id)arg1;
- (void)addIAdCategories:(id)arg1;
- (void)addIAdKeywords:(id)arg1;
- (void)addPinnedArticleIds:(id)arg1;
- (void)addPublisherPaidFeldsparablePurchaseIds:(id)arg1;
- (void)addPurchaseOfferableConfiguration:(id)arg1;
- (void)addRelatedChannelIds:(id)arg1;
- (void)addRelatedChannelIdsForOnboarding:(id)arg1;
- (void)addRelatedTopicIds:(id)arg1;
- (void)addRelatedTopicIdsForOnboarding:(id)arg1;
- (long long)allowedAdTypes;
- (id)allowedStorefrontIds;
- (id)allowedStorefrontIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)allowedStorefrontIdsCount;
- (id)base;
- (id)blockedStorefrontIds;
- (id)blockedStorefrontIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)blockedStorefrontIdsCount;
- (id)channelDefaultSectionId;
- (id)channelSectionIds;
- (id)channelSectionIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)channelSectionIdsCount;
- (void)clearAllowedStorefrontIds;
- (void)clearBlockedStorefrontIds;
- (void)clearChannelSectionIds;
- (void)clearIAdCategories;
- (void)clearIAdKeywords;
- (void)clearPinnedArticleIds;
- (void)clearPublisherPaidFeldsparablePurchaseIds;
- (void)clearPurchaseOfferableConfigurations;
- (void)clearRelatedChannelIds;
- (void)clearRelatedChannelIdsForOnboardings;
- (void)clearRelatedTopicIds;
- (void)clearRelatedTopicIdsForOnboardings;
- (long long)contentProvider;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverImageUrl;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)feedConfiguration;
- (unsigned long long)forYouCutoffTime;
- (unsigned long long)forYouMaximumArticleCount;
- (bool)hasAllowedAdTypes;
- (bool)hasBase;
- (bool)hasChannelDefaultSectionId;
- (bool)hasContentProvider;
- (bool)hasCoverImageUrl;
- (bool)hasFeedConfiguration;
- (bool)hasForYouCutoffTime;
- (bool)hasForYouMaximumArticleCount;
- (bool)hasIsDeprecated;
- (bool)hasIsExplicitContent;
- (bool)hasIsNotificationEnabled;
- (bool)hasIsPublic;
- (bool)hasLogoUrl;
- (bool)hasMinimumNewsVersion;
- (bool)hasName;
- (bool)hasNameImageForDarkBackgroundUrl;
- (bool)hasNameImageMaskUrl;
- (bool)hasNameImageMetadata;
- (bool)hasNameImageUrl;
- (bool)hasParentId;
- (bool)hasPrimaryAudience;
- (bool)hasPublisherPaidAuthorizationUrl;
- (bool)hasPublisherPaidLeakyPaywallOptOut;
- (bool)hasPublisherPaidVerificationUrl;
- (bool)hasPublisherPaidWebOptIn;
- (bool)hasPublisherPaidWebaccessUrl;
- (bool)hasReplacementId;
- (bool)hasScore;
- (bool)hasTagNameImageBaselineShift;
- (bool)hasTagNameImageScaleFactor;
- (bool)hasTemplateJson;
- (bool)hasType;
- (unsigned long long)hash;
- (id)iAdCategories;
- (id)iAdCategoriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)iAdCategoriesCount;
- (id)iAdKeywords;
- (id)iAdKeywordsAtIndex:(unsigned long long)arg1;
- (unsigned long long)iAdKeywordsCount;
- (bool)isDeprecated;
- (bool)isEqual:(id)arg1;
- (bool)isExplicitContent;
- (bool)isNotificationEnabled;
- (bool)isPublic;
- (id)logoUrl;
- (void)mergeFrom:(id)arg1;
- (id)minimumNewsVersion;
- (id)name;
- (id)nameImageForDarkBackgroundUrl;
- (id)nameImageMaskUrl;
- (id)nameImageMetadata;
- (id)nameImageUrl;
- (id)parentId;
- (id)pinnedArticleIds;
- (id)pinnedArticleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)pinnedArticleIdsCount;
- (id)primaryAudience;
- (id)publisherPaidAuthorizationUrl;
- (id)publisherPaidFeldsparablePurchaseIds;
- (id)publisherPaidFeldsparablePurchaseIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)publisherPaidFeldsparablePurchaseIdsCount;
- (bool)publisherPaidLeakyPaywallOptOut;
- (id)publisherPaidVerificationUrl;
- (bool)publisherPaidWebOptIn;
- (id)publisherPaidWebaccessUrl;
- (id)purchaseOfferableConfigurationAtIndex:(unsigned long long)arg1;
- (id)purchaseOfferableConfigurations;
- (unsigned long long)purchaseOfferableConfigurationsCount;
- (bool)readFrom:(id)arg1;
- (id)relatedChannelIds;
- (id)relatedChannelIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)relatedChannelIdsCount;
- (id)relatedChannelIdsForOnboardingAtIndex:(unsigned long long)arg1;
- (id)relatedChannelIdsForOnboardings;
- (unsigned long long)relatedChannelIdsForOnboardingsCount;
- (id)relatedTopicIds;
- (id)relatedTopicIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)relatedTopicIdsCount;
- (id)relatedTopicIdsForOnboardingAtIndex:(unsigned long long)arg1;
- (id)relatedTopicIdsForOnboardings;
- (unsigned long long)relatedTopicIdsForOnboardingsCount;
- (id)replacementId;
- (long long)score;
- (void)setAllowedAdTypes:(long long)arg1;
- (void)setAllowedStorefrontIds:(id)arg1;
- (void)setBase:(id)arg1;
- (void)setBlockedStorefrontIds:(id)arg1;
- (void)setChannelDefaultSectionId:(id)arg1;
- (void)setChannelSectionIds:(id)arg1;
- (void)setContentProvider:(long long)arg1;
- (void)setCoverImageUrl:(id)arg1;
- (void)setFeedConfiguration:(id)arg1;
- (void)setForYouCutoffTime:(unsigned long long)arg1;
- (void)setForYouMaximumArticleCount:(unsigned long long)arg1;
- (void)setHasAllowedAdTypes:(bool)arg1;
- (void)setHasContentProvider:(bool)arg1;
- (void)setHasForYouCutoffTime:(bool)arg1;
- (void)setHasForYouMaximumArticleCount:(bool)arg1;
- (void)setHasIsDeprecated:(bool)arg1;
- (void)setHasIsExplicitContent:(bool)arg1;
- (void)setHasIsNotificationEnabled:(bool)arg1;
- (void)setHasIsPublic:(bool)arg1;
- (void)setHasPublisherPaidLeakyPaywallOptOut:(bool)arg1;
- (void)setHasPublisherPaidWebOptIn:(bool)arg1;
- (void)setHasScore:(bool)arg1;
- (void)setHasTagNameImageBaselineShift:(bool)arg1;
- (void)setHasTagNameImageScaleFactor:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setIAdCategories:(id)arg1;
- (void)setIAdKeywords:(id)arg1;
- (void)setIsDeprecated:(bool)arg1;
- (void)setIsExplicitContent:(bool)arg1;
- (void)setIsNotificationEnabled:(bool)arg1;
- (void)setIsPublic:(bool)arg1;
- (void)setLogoUrl:(id)arg1;
- (void)setMinimumNewsVersion:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNameImageForDarkBackgroundUrl:(id)arg1;
- (void)setNameImageMaskUrl:(id)arg1;
- (void)setNameImageMetadata:(id)arg1;
- (void)setNameImageUrl:(id)arg1;
- (void)setParentId:(id)arg1;
- (void)setPinnedArticleIds:(id)arg1;
- (void)setPrimaryAudience:(id)arg1;
- (void)setPublisherPaidAuthorizationUrl:(id)arg1;
- (void)setPublisherPaidFeldsparablePurchaseIds:(id)arg1;
- (void)setPublisherPaidLeakyPaywallOptOut:(bool)arg1;
- (void)setPublisherPaidVerificationUrl:(id)arg1;
- (void)setPublisherPaidWebOptIn:(bool)arg1;
- (void)setPublisherPaidWebaccessUrl:(id)arg1;
- (void)setPurchaseOfferableConfigurations:(id)arg1;
- (void)setRelatedChannelIds:(id)arg1;
- (void)setRelatedChannelIdsForOnboardings:(id)arg1;
- (void)setRelatedTopicIds:(id)arg1;
- (void)setRelatedTopicIdsForOnboardings:(id)arg1;
- (void)setReplacementId:(id)arg1;
- (void)setScore:(long long)arg1;
- (void)setTagNameImageBaselineShift:(unsigned long long)arg1;
- (void)setTagNameImageScaleFactor:(double)arg1;
- (void)setTemplateJson:(id)arg1;
- (void)setType:(int)arg1;
- (unsigned long long)tagNameImageBaselineShift;
- (double)tagNameImageScaleFactor;
- (id)templateJson;
- (int)type;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (id)generateCoverImageAssetHandleForURLString:(id)arg1 withAssetManager:(id)arg2;
- (id)generateCoverImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateLogoImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageForDarkBackgroundAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageMaskAssetHandleWithAssetManager:(id)arg1;

@end
