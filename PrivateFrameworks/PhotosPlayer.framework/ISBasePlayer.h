/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer
 */

@interface ISBasePlayer : ISObservable <ISPlayerItemObserver, ISWrappedAVPlayerDelegate> {
    NSHashTable * __outputs;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  __videoForwardPlaybackEndTime;
    float  __videoVolume;
    id  __videoWillPlayToEndObserver;
    ISBehavior * _activeBehavior;
    bool  _audioEnabled;
    float  _audioVolume;
    ISLayerPlayer * _crossfadePlayer;
    ISPlayerState * _lastAppliedLayoutInfo;
    ISPlayerItem * _playerItem;
    long long  _status;
    ISWrappedAVPlayer * _videoPlayer;
}

@property (nonatomic, readonly) NSHashTable *_outputs;
@property (setter=_setVideoForwardPlaybackEndTime:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } _videoForwardPlaybackEndTime;
@property (setter=_setVideoVolume:, nonatomic) float _videoVolume;
@property (setter=_setVideoWillPlayToEndObserver:, nonatomic, retain) id _videoWillPlayToEndObserver;
@property (setter=setActiveBehavior:, nonatomic, retain) ISBehavior *activeBehavior;
@property (getter=isAudioEnabled, nonatomic) bool audioEnabled;
@property (nonatomic) float audioVolume;
@property (nonatomic, readonly) ISLayerPlayer *crossfadePlayer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (setter=_setLastAppliedLayoutInfo:, nonatomic, retain) ISPlayerState *lastAppliedLayoutInfo;
@property (nonatomic, retain) ISPlayerItem *playerItem;
@property (setter=_setStatus:, nonatomic) long long status;
@property (readonly) Class superclass;
@property (nonatomic, readonly) ISWrappedAVPlayer *videoPlayer;

- (void).cxx_destruct;
- (void)_configureNewOutput:(id)arg1;
- (id)_outputs;
- (void)_playerItemDidPlayToEnd:(id)arg1;
- (void)_setForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setLastAppliedLayoutInfo:(id)arg1;
- (void)_setStatus:(long long)arg1;
- (void)_setVideoForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setVideoVolume:(float)arg1;
- (void)_setVideoWillPlayToEndObserver:(id)arg1;
- (void)_updateContentFromPlayerItem;
- (void)_updatePlayerItemAudioEnabled;
- (void)_updateStatus;
- (void)_updateVideoPlayerVolume;
- (void)_updateWillPlayToEndObserver;
- (void)_videoDidPlayToEnd;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_videoForwardPlaybackEndTime;
- (float)_videoVolume;
- (void)_videoWillPlayToEnd;
- (id)_videoWillPlayToEndObserver;
- (id)activeBehavior;
- (void)addOutput:(id)arg1;
- (void)applyOutputInfo:(id)arg1 fromBehavior:(id)arg2 withTransitionOptions:(id)arg3;
- (float)audioVolume;
- (void)avPlayer:(id)arg1 didChangeToItem:(id)arg2;
- (void)avPlayer:(id)arg1 didChangeToStatus:(long long)arg2;
- (void)avPlayer:(id)arg1 item:(id)arg2 didChangeToStatus:(long long)arg3;
- (void)behavior:(id)arg1 didSetOutputInfo:(id)arg2 withTransitionOptions:(id)arg3;
- (bool)behavior:(id)arg1 prerollVideoAtRate:(float)arg2 completionHandler:(id /* block */)arg3;
- (void)behavior:(id)arg1 seekCrossfadeToTime:(double)arg2;
- (bool)behavior:(id)arg1 seekVideoPlayerToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 completionHandler:(id /* block */)arg3;
- (void)behavior:(id)arg1 setCrossfadePlayRate:(float)arg2;
- (void)behavior:(id)arg1 setVideoForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)behavior:(id)arg1 setVideoPlayRate:(float)arg2;
- (void)behavior:(id)arg1 setVideoVolume:(float)arg2;
- (id)crossfadePlayer;
- (void)dealloc;
- (void)didAddOutput:(id)arg1;
- (void)enumerateOutputsWithBlock:(id /* block */)arg1;
- (id)init;
- (bool)isAudioEnabled;
- (id)lastAppliedLayoutInfo;
- (id)mutableChangeObject;
- (id)playerItem;
- (void)playerItemDidChange;
- (void)playerItemStatusDidChange:(id)arg1;
- (void)removeOutput:(id)arg1;
- (void)setActiveBehavior:(id)arg1;
- (void)setAudioEnabled:(bool)arg1;
- (void)setAudioVolume:(float)arg1;
- (void)setPlayerItem:(id)arg1;
- (long long)status;
- (void)statusDidChange;
- (void)videoPlayRateDidChange;
- (id)videoPlayer;
- (double)videoWillPlayToEndInterval;
- (void)willRemoveOutput:(id)arg1;

@end
