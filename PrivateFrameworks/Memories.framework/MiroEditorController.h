/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroEditorController : NSObject <MiroAssetPropertyEditing, MiroProjectEditing> {
    NSArray * _displayedClips;
    MiroMemory * _memory;
    NSMutableDictionary * _modifiedAssetsMetadata;
    NSMutableDictionary * _previousAssetsMetadata;
    NSArray * _previousDisplayedClips;
    <MiroSequence> * _project;
    int  _projectFrameRate;
    NSMutableSet * _userAddedAssetIDs;
}

@property (nonatomic, readonly) NSArray *assetsFilteredForSuggestions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *displayedClips;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MiroMemory *memory;
@property (nonatomic, readonly) NSString *memoryLocalizedTitle;
@property (nonatomic, retain) NSMutableDictionary *modifiedAssetsMetadata;
@property (nonatomic, retain) NSMutableDictionary *previousAssetsMetadata;
@property (nonatomic, retain) NSArray *previousDisplayedClips;
@property (nonatomic, retain) <MiroSequence> *project;
@property (nonatomic) int projectFrameRate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *usedAssetsForMemory;
@property (nonatomic, retain) NSMutableSet *userAddedAssetIDs;

- (void).cxx_destruct;
- (void)_addAssetToModifiedAssets:(id)arg1;
- (unsigned long long)_adjacentClipIndexAfterRemovingClipsAtIndexes:(id)arg1;
- (id)_computeNewAudioLevelLoudTimeRangesForClip:(id)arg1 audioLevel:(unsigned long long)arg2;
- (id)_computeNewDislikedRangesWithExistingDislikedRanges:(id)arg1 proposedTrimRanges:(id)arg2 previousClipRanges:(id)arg3 currentClipRanges:(id)arg4;
- (id)_computeNewMuteTimeRangesForClip:(id)arg1 audioLevel:(unsigned long long)arg2;
- (id)_computeNewPickedRangesWithPreviousClipRanges:(id)arg1 currentClipRanges:(id)arg2;
- (id)_currentAssets;
- (id)_indexesOfClips:(id)arg1;
- (id)_makeTrimRangesWithClips:(id)arg1;
- (id)_mergeRanges:(id)arg1 withRanges:(id)arg2;
- (id)_modifyDisplayedClipsIfNeeded:(id)arg1;
- (id)_otherSplitClipsForClip:(id)arg1;
- (void)_removeUserRangesOfType:(unsigned long long)arg1 fromAsset:(id)arg2;
- (void)_replaceRangesOnAsset:(id)arg1 trimmed:(id)arg2 disliked:(id)arg3;
- (id)_replaceRangesThatOverlap:(id)arg1 withOverlappingRanges:(id)arg2 discardedRanges:(id*)arg3;
- (void)_restoreModifiedAssets;
- (id)_sortedDisplayedClipsWithAddedClips:(id)arg1;
- (id)_trimRangesForAssetBeforeEditing:(id)arg1;
- (void)_updateDisplayedClipsInsertingClip:(id)arg1 afterClip:(id)arg2;
- (id)_updateDisplayedClipsWithAddedClips:(id)arg1;
- (unsigned long long)_updateDisplayedClipsWithRemovedClips:(id)arg1;
- (void)_updateMuteRangesOnClip:(id)arg1 withAudioLevel:(unsigned long long)arg2;
- (void)_updateTrimRangesOnAsset:(id)arg1;
- (void)addClipsForAssets:(id)arg1 hintAddedIndexes:(id*)arg2;
- (id)assetsFilteredForSuggestions;
- (unsigned long long)audioLevelForClip:(id)arg1;
- (id)clipAtIndex:(unsigned long long)arg1;
- (unsigned long long)clipIndexForStartTime:(int)arg1;
- (bool)clipIsKeyAsset:(id)arg1;
- (bool)clipIsPartOfMultiUp:(id)arg1;
- (bool)clipIsPartOfSplit:(id)arg1;
- (id)displayedClips;
- (id)indexesForClipsOfAssetID:(id)arg1;
- (id)initWithProject:(id)arg1 memory:(id)arg2;
- (id)memory;
- (id)memoryLocalizedTitle;
- (id)modifiedAssetsMetadata;
- (void)moveClipAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfClips;
- (id)previousAssetsMetadata;
- (id)previousDisplayedClips;
- (id)project;
- (int)projectFrameRate;
- (void)removeClip:(id)arg1 hintSnapToIndex:(unsigned long long*)arg2;
- (void)revertEditedRanges;
- (void)setAudioLevel:(unsigned long long)arg1 forClip:(id)arg2;
- (void)setDisplayedClips:(id)arg1;
- (void)setMemory:(id)arg1;
- (void)setModifiedAssetsMetadata:(id)arg1;
- (void)setPreviousAssetsMetadata:(id)arg1;
- (void)setPreviousDisplayedClips:(id)arg1;
- (void)setProject:(id)arg1;
- (void)setProjectFrameRate:(int)arg1;
- (void)setUserAddedAssetIDs:(id)arg1;
- (bool)shouldRemoveClip:(id)arg1;
- (bool)shouldTrimClip:(id)arg1 startTime:(float)arg2 endTime:(float)arg3;
- (bool)trimClip:(id)arg1 startTime:(float)arg2 endTime:(float)arg3;
- (void)updateClipsFromProject:(id)arg1;
- (id)usedAssetsForMemory;
- (id)userAddedAssetIDs;
- (bool)userModifiedAudioLevelForClip:(id)arg1;

@end
