/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSWPStorageAnchorAttachmentMigrator : NSObject {
    NSMutableArray * _charIndexPlacementIndexArray;
}

@property (nonatomic, retain) NSMutableArray *charIndexPlacementIndexArray;

- (id)charIndexPlacementIndexArray;
- (void)dealloc;
- (id)didCopyFromSourceWPStorage:(id)arg1 toTemporaryStorage:(id)arg2 copiedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)didInsertIntoDestinationWPStorage:(id)arg1 insertionLocation:(unsigned long long)arg2 dolcContext:(id)arg3 storageTransaction:(struct TSWPStorageTransaction { struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject> > { struct TSWPStorageTransactionObject {} *x_1_1_1; struct TSWPStorageTransactionObject {} *x_1_1_2; struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject> > { struct TSWPStorageTransactionObject {} *x_3_2_1; } x_1_1_3; } x1; struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup> > { struct TSWPStorageActionGroup {} *x_2_1_1; struct TSWPStorageActionGroup {} *x_2_1_2; struct __compressed_pair<TSWPStorageActionGroup *, std::__1::allocator<TSWPStorageActionGroup> > { struct TSWPStorageActionGroup {} *x_3_2_1; } x_2_1_3; } x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; struct TSWPStorageActionGroup { int x_6_1_1; struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_2_2_1; struct TSWPStorageAction {} *x_2_2_2; struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_3_3_1; } x_2_2_3; } x_6_1_2; struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_3_2_1; struct TSWPStorageAction {} *x_3_2_2; struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_3_3_1; } x_3_2_3; } x_6_1_3; struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_4_2_1; struct TSWPStorageAction {} *x_4_2_2; struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_3_3_1; } x_4_2_3; } x_6_1_4; struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_5_2_1; struct TSWPStorageAction {} *x_5_2_2; struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction> > { struct TSWPStorageAction {} *x_3_3_1; } x_5_2_3; } x_6_1_5; bool x_6_1_6; struct TSWPMarkers { struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short> > > { struct pair<unsigned long, unsigned short> {} *x_1_3_1; struct pair<unsigned long, unsigned short> {} *x_1_3_2; struct __compressed_pair<std::__1::pair<unsigned long, unsigned short> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned short> > > { struct pair<unsigned long, unsigned short> {} *x_3_4_1; } x_1_3_3; } x_7_2_1; bool x_7_2_2; bool x_7_2_3; bool x_7_2_4; bool x_7_2_5; } x_6_1_7; } x6; unsigned int x7; unsigned long long x8; struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind> > { int *x_9_1_1; int *x_9_1_2; struct __compressed_pair<TSWPAttributeArrayKind *, std::__1::allocator<TSWPAttributeArrayKind> > { int *x_3_2_1; } x_9_1_3; } x9; struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange> > { struct TSWPStorageChangeRange {} *x_10_1_1; struct TSWPStorageChangeRange {} *x_10_1_2; struct __compressed_pair<TSWPStorageChangeRange *, std::__1::allocator<TSWPStorageChangeRange> > { struct TSWPStorageChangeRange {} *x_3_2_1; } x_10_1_3; } x10; struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange> > { struct TSWPStorageParagraphIndexChange {} *x_11_1_1; struct TSWPStorageParagraphIndexChange {} *x_11_1_2; struct __compressed_pair<TSWPStorageParagraphIndexChange *, std::__1::allocator<TSWPStorageParagraphIndexChange> > { struct TSWPStorageParagraphIndexChange {} *x_3_2_1; } x_11_1_3; } x11; unsigned long long x12; unsigned long long x13; bool x14; id x15; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; double x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void x42; void*x43; void*x44; void*x45; void*x46; id x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; short x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; out void*x63; void x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; out void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; long long x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; long long x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; double x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; char *x173; const void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; double x196; long long x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; char *x251; void*x252; void x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void x261; void*x262; void*x263; void*x264; void*x265; void*x266; float x267; long doublex268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; double x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void x301; void*x302; void*x303; void*x304; void*x305; id x306; void*x307; void x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; double x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; unsigned short x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; id x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void x379; void*x380; void*x381; void*x382; void*x383; id x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; double x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; long doublex417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; double x425; void x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; char *x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; const void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; short x486; void*x487; void*x488; void*x489; const void*x490; void*x491; void*x492; BOOL x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; unsigned short x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; const void*x511; void*x512; void*x513; void*x514; void*x515; const void*x516; short x517; void*x518; void*x519; void*x520; struct x521; void*x522; void*x523; void*x524; short x525; void*x526; void*x527; void*x528; const void*x529; void*x530; void*x531; BOOL x532; void*x533; void*x534; void*x535; void*x536; void*x537; void x538; void*x539; void*x540; void*x541; BOOL x542; void*x543; void*x544; void*x545; out void*x546; const void*x547; void*x548; void*x549; short x550; void*x551; void*x552; void*x553; double x554; void*x555; SEL x556; void*x557; SEL x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; SEL x566; void*x567; SEL x568; void*x569; void*x570; void*x571; void*x572; void*x573; int x574; void*x575; const void*x576; void*x577; void*x578; void*x579; void*x580; in void*x581; short x582; void*x583; int x584; void*x585; void*x586; void*x587; in void*x588; void*x589; void*x590; double x591; void*x592; void*x593; void*x594; long x595; void*x596; out void*x597; in void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; in void*x607; short x608; void*x609; int x610; void*x611; void*x612; void*x613; in void*x614; void*x615; void*x616; double x617; void*x618; void*x619; void*x620; short x621; void*x622; void*x623; void*x624; out void*x625; const void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; short x635; void*x636; void*x637; void*x638; double x639; void*x640; SEL x641; void*x642; SEL x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; SEL x651; void*x652; SEL x653; void*x654; void*x655; void*x656; long x657; void*x658; long x659; void*x660; out void*x661; BOOL x662; void*x663; void*x664; void*x665; void*x666; void*x667; out void*x668; const void*x669; void*x670; void*x671; short x672; void*x673; void*x674; void*x675; double x676; void*x677; SEL x678; void*x679; SEL x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; SEL x688; void*x689; SEL x690; void*x691; void*x692; void*x693; void*x694; void*x695; int x696; void*x697; const void*x698; void*x699; void*x700; void*x701; void*x702; in void*x703; short x704; void*x705; int x706; void*x707; void*x708; void*x709; in void*x710; void*x711; void*x712; double x713; void*x714; void*x715; void*x716; long x717; void*x718; out void*x719; in void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; in void*x729; short x730; void*x731; int x732; void*x733; void*x734; void*x735; in void*x736; void*x737; void*x738; double x739; void*x740; void*x741; void*x742; short x743; void*x744; void*x745; void*x746; out void*x747; const void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; struct x763; void*x764; void*x765; void*x766; short x767; void*x768; void*x769; void*x770; const void*x771; void*x772; void*x773; BOOL x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; int x784; void*x785; const void*x786; void*x787; void*x788; void*x789; void*x790; in void*x791; short x792; void*x793; int x794; void*x795; void*x796; void*x797; in void*x798; void*x799; void*x800; double x801; void*x802; void*x803; void*x804; long x805; void*x806; out void*x807; in void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; in void*x817; short x818; void*x819; int x820; void*x821; void*x822; void*x823; in void*x824; void*x825; void*x826; double x827; void*x828; void*x829; void*x830; short x831; void*x832; void*x833; void*x834; out void*x835; const void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; struct x843; void*x844; }*)arg4 changeSession:(id)arg5;
- (void)setCharIndexPlacementIndexArray:(id)arg1;

@end
