/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGGLDebugTileData : NSObject {
    unsigned long long  _coastLineCount;
    struct unique_ptr<ggl::Debug::BaseMesh, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
        struct __compressed_pair<ggl::Debug::BaseMesh *, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _coastLineMesh;
    unsigned long long  _coastLineVertCount;
    unsigned long long  _junctionCount;
    struct unique_ptr<ggl::DebugPoints::BaseMesh, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
        struct __compressed_pair<ggl::DebugPoints::BaseMesh *, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _junctionsPointsMesh;
    unsigned long long  _namedLineCount;
    struct unique_ptr<ggl::Debug::BaseMesh, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
        struct __compressed_pair<ggl::Debug::BaseMesh *, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _namedLineMesh;
    unsigned long long  _namedLineVertCount;
    unsigned long long  _overpassCount;
    struct unique_ptr<ggl::DebugPoints::BaseMesh, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
        struct __compressed_pair<ggl::DebugPoints::BaseMesh *, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _overpassPointsMesh;
    unsigned long long  _poiCount;
    struct unique_ptr<ggl::DebugPoints::BaseMesh, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
        struct __compressed_pair<ggl::DebugPoints::BaseMesh *, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _poiPointsMesh;
    unsigned long long  _polygonCount;
    struct unique_ptr<ggl::Debug::BaseMesh, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
        struct __compressed_pair<ggl::Debug::BaseMesh *, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _polygonLineMesh;
    unsigned long long  _polygonVertCount;
    struct unique_ptr<ggl::DebugPoints::BaseMesh, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
        struct __compressed_pair<ggl::DebugPoints::BaseMesh *, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _realTransitNodesMesh;
    unsigned long long  _unnamedLineCount;
    struct unique_ptr<ggl::Debug::BaseMesh, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
        struct __compressed_pair<ggl::Debug::BaseMesh *, std::__1::default_delete<ggl::Debug::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _unnamedLineMesh;
    unsigned long long  _unnamedLineVertCount;
    unsigned long long  _vertexCount;
    struct unique_ptr<ggl::DebugPoints::BaseMesh, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
        struct __compressed_pair<ggl::DebugPoints::BaseMesh *, std::__1::default_delete<ggl::DebugPoints::BaseMesh> > { 
            struct BaseMesh {} *__first_; 
        } __ptr_; 
    }  _verticesPointsMesh;
}

@property (nonatomic, readonly) unsigned long long coastLineCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; char *x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; struct  { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> { {} x35; void*x36; char *x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; }*coastLineMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long coastLineVertCount;
@property (nonatomic, readonly) unsigned long long junctionCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; struct  { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> { {} x35; void*x36; char *x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; }*junctionsPointsMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long namedLineCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; struct  { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> { {} x35; void*x36; char *x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; }*namedLineMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long namedLineVertCount;
@property (nonatomic, readonly) unsigned long long overpassCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; const void*x39; int x40; void*x41; void*x42; void*x43; void*x44; void*x45; double x46; void*x47; out void*x48; void*x49; void*x50; unsigned int x51/* : ? */; void*x52; long x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; struct x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; double x103; void*x104; out void*x105; void*x106; void*x107; unsigned int x108/* : ? */; void*x109; long x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void* x120[ /* ? */ ]; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; }*overpassPointsMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long poiCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; struct BaseMesh { int (**x_37_1_1)(); char *x_37_1_2; int (**x_37_1_3)(); struct ResourceManager {} *x_37_1_4; struct RenderResource {} *x_37_1_5; struct MeshCReflection {} *x_37_1_6; struct x_37_1_7; void*x_37_1_8; void*x_37_1_9; void*x_37_1_10; void*x_37_1_11; void*x_37_1_12; void*x_37_1_13; void*x_37_1_14; void*x_37_1_15; void*x_37_1_16; void*x_37_1_17; void*x_37_1_18; void*x_37_1_19; void*x_37_1_20; void*x_37_1_21; void*x_37_1_22; void*x_37_1_23; void*x_37_1_24; void*x_37_1_25; void*x_37_1_26; void*x_37_1_27; void*x_37_1_28; void*x_37_1_29; void*x_37_1_30; void*x_37_1_31; void*x_37_1_32; void*x_37_1_33; struct  { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> { {} x_37_1_34; void*x_37_1_35; char *x_37_1_36; void*x_37_1_37; void*x_37_1_38; void*x_37_1_39; void*x_37_1_40; void*x_37_1_41; void*x_37_1_42; void*x_37_1_43; void*x_37_1_44; void*x_37_1_45; } *x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; }*poiPointsMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long polygonCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; struct BaseMesh { int (**x_37_1_1)(); char *x_37_1_2; int (**x_37_1_3)(); struct ResourceManager {} *x_37_1_4; struct RenderResource {} *x_37_1_5; struct MeshCReflection {} *x_37_1_6; struct x_37_1_7; void*x_37_1_8; void*x_37_1_9; void*x_37_1_10; void*x_37_1_11; void*x_37_1_12; void*x_37_1_13; void*x_37_1_14; void*x_37_1_15; void*x_37_1_16; void*x_37_1_17; void*x_37_1_18; void*x_37_1_19; void*x_37_1_20; void*x_37_1_21; void*x_37_1_22; void*x_37_1_23; void*x_37_1_24; void*x_37_1_25; void*x_37_1_26; void*x_37_1_27; void*x_37_1_28; void*x_37_1_29; void*x_37_1_30; void*x_37_1_31; void*x_37_1_32; void*x_37_1_33; const void*x_37_1_34; struct  struct Matrix<double, 2, 1> { double x_1_1_1[2];  {} x_37_1_35; void*x_37_1_36; void*x_37_1_37; void*x_37_1_38; void*x_37_1_39; void*x_37_1_40; short x_37_1_41; void*x_37_1_42; const void*x_37_1_43; BOOL x_37_1_44; void*x_37_1_45; void*x_37_1_46; void*x_37_1_47; void*x_37_1_48; void*x_37_1_49; const int x_37_1_50; void*x_37_1_51; void*x_37_1_52; double x_37_1_53; out void*x_37_1_54; unsigned int x_37_1_55/* : ? */; long x_37_1_56; void*x_37_1_57; void*x_37_1_58; void*x_37_1_59; void*x_37_1_60; void*x_37_1_61; void*x_37_1_62; void*x_37_1_63; void*x_37_1_64; void*x_37_1_65; struct  double x_2_1_1[2];  {} x_37_1_66; void*x_37_1_67; void*x_37_1_68; void*x_37_1_69; void*x_37_1_70; void*x_37_1_71; } *x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; out void*x67; void*x68; void*x69; void*x70; void*x71; long long x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; const void*x86; void*x87; void*x88; void*x89; void*x90; double x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; struct x111; void*x112; void*x113; void*x114; long x115; void*x116; out void*x117; in void*x118; void*x119; void*x120; void*x121; void*x122; long x123; void*x124; out void*x125; in void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; bool x149; void*x150; bycopy void*x151; bycopy void*x152; unsigned long x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void* x171[ /* ? */ ]; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; }*polygonLineMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long polygonVertCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; inout void*x35; unsigned short x36; void*x37; void*x38; void*x39; void*x40; void*x41; in void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; struct x49; void*x50; void*x51; void*x52; void*x53; void*x54; in void*x55; short x56; void*x57; int x58; void*x59; void*x60; void*x61; in void*x62; void*x63; void*x64; double x65; void*x66; void*x67; void*x68; long x69; void*x70; out void*x71; in void*x72; void*x73; void*x74; void*x75; void*x76; long x77; void*x78; out void*x79; in void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; in void*x95; short x96; void*x97; int x98; void*x99; void*x100; void*x101; in void*x102; void*x103; void*x104; double x105; void*x106; void*x107; void*x108; long x109; void*x110; out void*x111; in void*x112; void*x113; void*x114; void*x115; void*x116; long x117; void*x118; out void*x119; in void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; }*realTransitNodesMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long unnamedLineCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; struct  struct Matrix<float, 2, 1> { float x_1_2_1[2];  {} x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; short x48; void*x49; const void*x50; BOOL x51; void*x52; void*x53; void*x54; void*x55; void*x56; const int x57; void*x58; void*x59; float x60; long x61; out void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; struct  float x_2_2_1[2];  {} x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; }*unnamedLineMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */
@property (nonatomic, readonly) unsigned long long unnamedLineVertCount;
@property (nonatomic, readonly) unsigned long long vertexCount;
@property (nonatomic, readonly) struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; /* Warning: unhandled struct encoding: '{vector<std::__1::shared_ptr<ggl::VertexData>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; long x37; void*x38; int x39; void*x40; short x41; void*x42; void*x43; void*x44; void*x45; void*x46; in void*x47; out void*x48; double x49; void*x50; void*x51; void*x52; void*x53; void*x54; unsigned int x55/* : ? */; void*x56; void*x57; void*x58; short x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; double x67; void*x68; SEL x69; void*x70; SEL x71; void*x72; unsigned long x73; void*x74; void*x75; void*x76; unsigned int x77/* : ? */; void*x78; void*x79; void*x80; long x81; void*x82; unsigned int x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; unsigned long x93; void*x94; out void*x95; void*x96; void*x97; double x98; void*x99; void*x100; void*x101; const void*x102; SEL x103; void*x104; SEL x105; void*x106; unsigned char x107; void*x108; void*x109; void*x110; BOOL x111; void*x112; void*x113; void*x114; void*x115; void*x116; double x117; void*x118; unsigned int x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void x131; void*x132; out void*x133; int x134; void*x135; double x136; void*x137; void*x138; void*x139; char *x140; void*x141; void*x142; void*x143; void*x144; void*x145; struct x146; void*x147; }*verticesPointsMesh; /* unknown property attribute:  std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > >=^{shared_ptr<ggl::VertexData>}}}{shared_ptr<ggl::IndexData>=^{IndexData}^{__shared_weak_count}}} */

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_fillInDebugData:(id)arg1;
- (unsigned long long)coastLineCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)coastLineMesh;
- (unsigned long long)coastLineVertCount;
- (id)initWithTile:(id)arg1;
- (unsigned long long)junctionCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)junctionsPointsMesh;
- (unsigned long long)namedLineCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)namedLineMesh;
- (unsigned long long)namedLineVertCount;
- (unsigned long long)overpassCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)overpassPointsMesh;
- (unsigned long long)poiCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)poiPointsMesh;
- (unsigned long long)polygonCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)polygonLineMesh;
- (unsigned long long)polygonVertCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)realTransitNodesMesh;
- (unsigned long long)unnamedLineCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)unnamedLineMesh;
- (unsigned long long)unnamedLineVertCount;
- (unsigned long long)vertexCount;
- (struct BaseMesh { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct MeshCReflection {} *x6; struct vector<std::__1::shared_ptr<ggl::VertexData>, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_7_1_1; struct shared_ptr<ggl::VertexData> {} *x_7_1_2; struct __compressed_pair<std::__1::shared_ptr<ggl::VertexData> *, std::__1::allocator<std::__1::shared_ptr<ggl::VertexData> > > { struct shared_ptr<ggl::VertexData> {} *x_3_2_1; } x_7_1_3; } x7; struct shared_ptr<ggl::IndexData> { struct IndexData {} *x_8_1_1; struct __shared_weak_count {} *x_8_1_2; } x8; }*)verticesPointsMesh;

@end
