/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolygonMapModel : VKVectorMapModel <VKStyleManagerObserver> {
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _aboveBuildingsClearItem;
    int  _aboveBuildingsSourceTileZToStencilOffset;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _aboveRoadsClearItem;
    int  _aboveRoadsSourceTileZToStencilOffset;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _animatableFillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonAnimatableFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _animatableFillPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _animatableStrokePipelineSetupPool;
    struct shared_ptr<ggl::PolygonAnimatableStroke::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _animatableStrokePipelineState;
    struct RenderItemBatcher { 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        struct RenderItem {} *_prototype; 
        struct Pool<ggl::RenderItem> { 
            struct set<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                    struct __tree_node<void *, void *> {} *__begin_node_; 
                    struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<void *, void *> > > { 
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> {} *__left_; 
                        } __first_; 
                    } __pair1_; 
                    struct __compressed_pair<unsigned long, std::__1::less<void *> > { 
                        unsigned long long __first_; 
                    } __pair3_; 
                } __tree_; 
            } mAllocatedSlabs; 
            unsigned long long mElementsPerSlab; 
            unsigned long long mSlabSize; 
            struct FreeList {} *mFreeElement; 
        } _pool; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
    }  _batcher;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _belowRoadsClearItem;
    int  _belowRoadsSourceTileZtoStencilOffset;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _blendedFillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _blendedFillPipelineState;
    bool  _buildingsAre3D;
    struct CommandBufferIdSet { 
        struct vector<md::CommandBufferId, std::__1::allocator<md::CommandBufferId> > { 
            unsigned char *__begin_; 
            unsigned char *__end_; 
            struct __compressed_pair<md::CommandBufferId *, std::__1::allocator<md::CommandBufferId> > { 
                unsigned char *__first_; 
            } __end_cap_; 
        } _ids; 
    }  _commandBufferIds;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _fillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineState;
    unsigned long long  _mapLayerPosition;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _polygonRenderStates;
    VKRouteContext * _routeContext;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _strokePipelineSetupPool;
    struct shared_ptr<ggl::PolygonStroke::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokePipelineState;
    struct unordered_map<unsigned long long, md::PolygonRouteAttributes, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, md::PolygonRouteAttributes> > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::hash<unsigned long long>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::equal_to<unsigned long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _transitNodesRouteAttributesMap;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::AnimatableTexture::Variant> > { 
        struct ConstantDataTyped<ggl::AnimatableTexture::Variant> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _variantData;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long mapLayerPosition;
@property (nonatomic, retain) VKRouteContext *routeContext;
@property (nonatomic, readonly) struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; } styleManager;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; const void*x31; int x32; void*x33; void*x34; void*x35; void*x36; void*x37; float x38; void*x39; long x40; void*x41; out void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; struct x63; void*x64; void*x65; void*x66; float x67; void*x68; long x69; void*x70; out void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void* x94[ /* ? */ ]; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; }*)aboveBuildingsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; out in void*x24; long x25; unsigned int x26; void*x27; void*x28; void*x29; void*x30; const out void*x31; void*x32; void*x33; struct 
    bool  _needsTextureUpdate;
    VKSharedResources * _sharedResources;
    struct shared_ptr<ggl::Texture2D> { 
        struct Texture2D { {} x34; void*x35; char *x36; void*x37; void*x38; void*x39; void*x40; const void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; short x53; void*x54; const void*x55; BOOL x56; void*x57; void*x58; void*x59; void*x60; short x61; void*x62; void*x63; const void*x64; double x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; BOOL x72; out void*x73; in void*x74; void*x75; struct  {} x76; void*x77; char *x78; void*x79; void*x80; BOOL x81; in void*x82; const long x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; }*)aboveRoadsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; int x23; double x24; char *x25; void*x26; void*x27; void*x28; void*x29; void*x30; void x31; out int x32; double x33; char *x34; void*x35; void*x36; void*x37; void*x38; void*x39; void x40; out int x41; double x42; char *x43; void*x44; void*x45; void*x46; void*x47; void*x48; void x49; out int x50; double x51; char *x52; void*x53; void*x54; void*x55; void*x56; void*x57; long x58; out in void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void x66; out int x67; double x68; char *x69; void*x70; void*x71; void*x72; void*x73; void*x74; unsigned short x75; void*x76; unsigned long x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void x84; out int x85; double x86; char *x87; void*x88; void*x89; void*x90; void*x91; void*x92; unsigned short x93; void*x94; unsigned long x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void x102; out int x103; double x104; char *x105; void*x106; void*x107; void*x108; void*x109; void*x110; void x111; out int x112; double x113; char *x114; void*x115; void*x116; void*x117; void*x118; void*x119; void x120; out int x121; double x122; char *x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void x130; out int x131; double x132; char *x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void x140; out int x141; double x142; char *x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; int x150; in void*x151; void x152; out int x153; double x154; char *x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; double x162; out void*x163; unsigned int x164/* : ? */; long x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void x174; out int x175; double x176; char *x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; int x184; in void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void x193; out int x194; double x195; char *x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; int x203; in void*x204; void x205; out int x206; double x207; char *x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void x215; out int x216; double x217; char *x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void x225; out int x226; double x227; char *x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; in short x236; int x237; void*x238; in void*x239; double x240; void*x241; long x242; out in void*x243; void*x244; long x245; out in void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void x254; out int x255; double x256; char *x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void x264; out int x265; double x266; char *x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void x274; out int x275; double x276; char *x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void x284; out int x285; double x286; char *x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void x294; out int x295; double x296; char *x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; BOOL x304; out in short x305; void*x306; void*x307; void x308; out int x309; double x310; char *x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void x318; out int x319; double x320; char *x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void x328; out int x329; double x330; char *x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void x338; out int x339; double x340; char *x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void x348; out int x349; double x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; const void*x361; char *x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void x380; out int x381; double x382; char *x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void x390; out int x391; double x392; char *x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void x400; out int x401; double x402; char *x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void x410; out int x411; double x412; char *x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void x420; out int x421; double x422; char *x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void x430; out int x431; double x432; char *x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void x440; out int x441; double x442; char *x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void x450; out int x451; double x452; char *x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; short x460; void*x461; const void*x462; BOOL x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void x472; out int x473; double x474; char *x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void x482; out int x483; double x484; char *x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void x492; out int x493; double x494; char *x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; short x502; void*x503; out const void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void x512; out int x513; double x514; char *x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void x522; out int x523; double x524; char *x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void x532; out int x533; double x534; char *x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; BOOL x542; out in short x543; void*x544; void*x545; void x546; out int x547; double x548; char *x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void x556; out int x557; double x558; char *x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void x566; out int x567; double x568; char *x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; bool x576; bycopy bycopy unsigned long x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void x585; out int x586; double x587; char *x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void x595; out int x596; double x597; char *x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void x605; out int x606; double x607; char *x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void x615; out int x616; double x617; char *x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void x625; out int x626; double x627; char *x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void x635; out int x636; double x637; char *x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void x645; out int x646; double x647; char *x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void x655; out int x656; double x657; char *x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void x665; out int x666; double x667; char *x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; int x675; in void*x676; void x677; out int x678; double x679; char *x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; double x687; out void*x688; unsigned int x689/* : ? */; long x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void x699; out int x700; double x701; char *x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; int x709; in void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void x718; out int x719; double x720; char *x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; int x728; in void*x729; void x730; out int x731; double x732; char *x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void x740; out int x741; double x742; char *x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void x750; out int x751; double x752; char *x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; in short x761; int x762; void*x763; in void*x764; double x765; void*x766; long x767; out in void*x768; void*x769; long x770; out in void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void x779; out int x780; double x781; char *x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void x789; out int x790; double x791; char *x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void x799; out int x800; double x801; char *x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void x809; out int x810; double x811; char *x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void x819; out int x820; double x821; char *x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; BOOL x829; out in short x830; void*x831; void*x832; void x833; out int x834; double x835; char *x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void x843; out int x844; double x845; char *x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void x853; out int x854; double x855; char *x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void x863; out int x864; double x865; char *x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void x873; out int x874; double x875; char *x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; short x883; void*x884; const void*x885; BOOL x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void x895; out int x896; double x897; char *x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; }*)belowRoadsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (void)buildingsDidBecome3D:(bool)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(bool)arg1;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)flushPools;
- (void)generateRenderItemsForOpaquePolygonsInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)generateRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)generateRenderItemsForTransparentPolygonsInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2 commandBufferIdSet:(struct CommandBufferIdSet { struct vector<md::CommandBufferId, std::__1::allocator<md::CommandBufferId> > { unsigned char *x_1_1_1; unsigned char *x_1_1_2; struct __compressed_pair<md::CommandBufferId *, std::__1::allocator<md::CommandBufferId> > { unsigned char *x_3_2_1; } x_1_1_3; } x1; })arg3;
- (unsigned long long)mapLayerPosition;
- (struct RenderState { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct DepthState { int x_6_1_1; int x_6_1_2; int x_6_1_3; float x_6_1_4; float x_6_1_5; } x6; struct StencilState { int x_7_1_1; int x_7_1_2; int x_7_1_3; int x_7_1_4; int x_7_1_5; unsigned int x_7_1_6; unsigned int x_7_1_7; unsigned int x_7_1_8; } x7; struct RasterizerState { int x_8_1_1; int x_8_1_2; unsigned int x_8_1_3; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_3_1[2]; } x_4_2_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_3_1[2]; } x_4_2_2; } x_8_1_4; } x8; bool x9; }*)renderStateForFilling:(bool)arg1 usingStencilType:(unsigned char)arg2 blendingEnabled:(bool)arg3 depthTestingEnabled:(bool)arg4;
- (void)reserveStencilRangeAboveBuildingsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reserveStencilRangeAboveRoadsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reserveStencilRangeBelowRoadsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reset;
- (void)resetPools;
- (id)routeContext;
- (void)setMapLayerPosition:(unsigned long long)arg1;
- (void)setRouteContext:(id)arg1;
- (void)stylesheetDidChange;
- (void)stylesheetDoneChanging;
- (void)stylesheetTransitionDidProgress;
- (void)stylesheetWillChange;
- (unsigned long long)textureSize;
- (void)updateStylesInTiles:(id)arg1 updateTextures:(bool)arg2;
- (bool)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;
- (struct Matrix<float, 4, 4> { float x1[16]; })worldTransformForPolygonGroup:(id)arg1 atZoom:(float)arg2;

@end
