/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKVectorMapModel : VKMapTileModel {
    struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__begin_; 
        struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__end_; 
        struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { 
            struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *__first_; 
        } __end_cap_; 
    }  _defaultStencilItems;
    bool  _needsTileStencil;
    unsigned int  _stencilItemIndex;
    struct shared_ptr<ggl::PolygonSolidFill::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _stencilPipelineState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _stencilState;
}

@property (nonatomic) bool needsTileStencil;

+ (bool)reloadOnActiveTileGroupChange;
+ (bool)reloadOnStylesheetChange;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_layoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2;
- (void)_updateTilesInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerAtPoint:(struct Matrix<double, 3, 1> { double x1[3]; })arg1;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)init;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (unsigned long long)mapLayerPosition;
- (bool)needsTileStencil;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; short x31; void*x32; void*x33; void*x34; double x35; void*x36; SEL x37; void*x38; SEL x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; SEL x47; void*x48; SEL x49; void*x50; void*x51; void*x52; long long x53; void*x54; void*x55; void*x56; void*x57; void*x58; long x59; void*x60; void*x61; void*x62; void*x63; void*x64; out void*x65; void*x66; void*x67; void*x68; void*x69; in void*x70; short x71; void*x72; int x73; void*x74; void*x75; void*x76; in void*x77; void*x78; void*x79; double x80; void*x81; void*x82; void*x83; long x84; void*x85; out void*x86; in void*x87; void*x88; void*x89; void*x90; void*x91; long x92; void*x93; out void*x94; in void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; short x104; void*x105; void*x106; void*x107; double x108; void*x109; SEL x110; void*x111; SEL x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; SEL x120; void*x121; SEL x122; void*x123; void*x124; void*x125; long x126; void*x127; long x128; void*x129; out void*x130; BOOL x131; void*x132; void*x133; void*x134; void*x135; void*x136; out void*x137; const void*x138; void*x139; void*x140; void*x141; void*x142; in void*x143; short x144; void*x145; int x146; void*x147; void*x148; void*x149; in void*x150; void*x151; void*x152; double x153; void*x154; void*x155; void*x156; long x157; void*x158; out void*x159; in void*x160; void*x161; void*x162; void*x163; void*x164; long x165; void*x166; out void*x167; in void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; struct x179; void*x180; void*x181; void*x182; short x183; void*x184; void*x185; void*x186; const void*x187; void*x188; void*x189; BOOL x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; in void*x198; int x199; void*x200; long long x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; const void*x213; void*x214; void*x215; short x216; void*x217; void*x218; void*x219; double x220; void*x221; SEL x222; void*x223; SEL x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; SEL x232; void*x233; SEL x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; short x244; void*x245; void*x246; void*x247; void*x248; void*x249; in void*x250; out void*x251; double x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; in void*x260; short x261; void*x262; int x263; void*x264; void*x265; void*x266; in void*x267; void*x268; void*x269; double x270; void*x271; void*x272; void*x273; long x274; void*x275; out void*x276; in void*x277; void*x278; void*x279; void*x280; void*x281; long x282; void*x283; out void*x284; in void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void x292; void*x293; out void*x294; int x295; void*x296; double x297; void*x298; void*x299; void*x300; char *x301; void*x302; void*x303; void*x304; void*x305; void*x306; char *x307; void*x308; void* x309[ /* ? */ ]; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; short x317; void*x318; void*x319; void*x320; double x321; void*x322; SEL x323; void*x324; SEL x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; SEL x333; void*x334; SEL x335; void*x336; void*x337; void*x338; void*x339; void*x340; unsigned int x341/* : ? */; void*x342; void*x343; void*x344; BOOL x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; long x355; void*x356; int x357; void*x358; short x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; char *x373; void*x374; char *x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; BOOL x391; void*x392; void*x393; void*x394; void*x395; void*x396; const void*x397; void*x398; void*x399; char *x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; in void*x412; short x413; void*x414; int x415; void*x416; void*x417; void*x418; in void*x419; void*x420; void*x421; double x422; void*x423; void*x424; void*x425; BOOL x426; void*x427; void*x428; void*x429; void*x430; void*x431; const void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; short x443; void*x444; void*x445; void*x446; const void*x447; void*x448; void*x449; BOOL x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; in void*x460; double x461; void*x462; void*x463; void*x464; const void*x465; unsigned long long x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; struct x478; void*x479; }*)arg1 fullyLoaded:(bool)arg2 layoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void x29; out int x30; double x31; char *x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; out void*x39; void*x40; void*x41; void x42; out int x43; double x44; char *x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; BOOL x52; out in short x53; void*x54; void*x55; void x56; out int x57; double x58; char *x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void x66; out int x67; double x68; char *x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void x76; out int x77; double x78; char *x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void x86; out int x87; double x88; char *x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void x96; out int x97; double x98; char *x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; int x106; in void*x107; void x108; out int x109; double x110; char *x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; short x118; void*x119; out const void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void x128; out int x129; double x130; char *x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; int x138; in void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void x147; out int x148; double x149; char *x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void x157; out int x158; double x159; char *x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void x167; out int x168; double x169; char *x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; int x177; in void*x178; void x179; out int x180; double x181; char *x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void x189; out int x190; double x191; char *x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void x199; out int x200; double x201; char *x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; double x209; out void*x210; unsigned int x211/* : ? */; long x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void x221; out int x222; double x223; char *x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void x231; out int x232; double x233; char *x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void x241; out int x242; double x243; char *x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; long x251; out in void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void x260; out int x261; double x262; char *x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; out void*x270; void*x271; void*x272; void x273; out int x274; double x275; char *x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; int x283; in void*x284; void x285; out int x286; double x287; char *x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void x295; out int x296; double x297; char *x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void x305; out int x306; double x307; char *x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void x315; out int x316; double x317; char *x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void x325; out int x326; double x327; char *x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; long x335; out in void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void x344; out int x345; double x346; char *x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; char *x360; void*x361; char *x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; BOOL x378; void*x379; void*x380; void*x381; void*x382; void*x383; const void*x384; void*x385; void*x386; char *x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; in void*x399; short x400; void*x401; int x402; void*x403; void*x404; void*x405; in void*x406; void*x407; void*x408; double x409; void*x410; void*x411; void*x412; BOOL x413; void*x414; void*x415; void*x416; void*x417; void*x418; const void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; short x430; void*x431; void*x432; void*x433; const void*x434; void*x435; void*x436; BOOL x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; in void*x447; double x448; void*x449; void*x450; void*x451; const void*x452; unsigned long long x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; struct x465; void*x466; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(bool)arg5 items:(struct vector<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > >, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x1; struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x2; struct __compressed_pair<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > *, std::__1::allocator<std::__1::pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > > > { struct pair<std::__1::unique_ptr<ggl::PolygonSolidFill::MeshPipelineSetup, std::__1::default_delete<ggl::PolygonSolidFill::MeshPipelineSetup> >, std::__1::unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > > {} *x_3_1_1; } x3; }*)arg6 layoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 sourceTileOffset:(const int*)arg8;
- (int)pushStencilItems:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; long x35; void*x36; SEL x37; void*x38; SEL x39; void*x40; void*x41; void*x42; out void*x43; long x44; void*x45; void*x46; void*x47; void*x48; void*x49; out void*x50; in void*x51; unsigned short x52; void*x53; out void*x54; long x55; void*x56; int x57; void*x58; double x59; void*x60; void*x61; void*x62; int x63; void*x64; long x65; void*x66; long x67; void*x68; SEL x69; void*x70; SEL x71; void*x72; void*x73; void*x74; void*x75; void*x76; short x77; void*x78; void*x79; void*x80; void*x81; void*x82; int x83; void*x84; void*x85; void*x86; void*x87; void*x88; long x89; void*x90; int x91; void*x92; in void*x93; void*x94; void*x95; unsigned short x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; short x116; void*x117; void*x118; void*x119; double x120; void*x121; SEL x122; void*x123; SEL x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; SEL x132; void*x133; SEL x134; void*x135; void*x136; void*x137; in void*x138; int x139; void*x140; long long x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; const void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; long x160; void*x161; SEL x162; void*x163; SEL x164; void*x165; void*x166; void*x167; void*x168; void*x169; in void*x170; double x171; void*x172; void*x173; void*x174; const void*x175; unsigned int x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; short x188; void*x189; void*x190; void*x191; double x192; void*x193; SEL x194; void*x195; SEL x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; SEL x204; void*x205; SEL x206; void*x207; double x208; void*x209; void*x210; void*x211; float x212; void*x213; void*x214; void*x215; void*x216; void*x217; long x218; void*x219; void*x220; void*x221; void*x222; void*x223; double x224; void*x225; void*x226; void*x227; long x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; long x242; void*x243; SEL x244; void*x245; SEL x246; void*x247; void*x248; void*x249; void*x250; void*x251; in void*x252; double x253; void*x254; void*x255; void*x256; const void*x257; unsigned int x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; struct x278; void*x279; }*)arg1 tiles:(id)arg2 minZ:(int)arg3 maxZ:(int)arg4 fullyLoaded:(bool)arg5 layoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg6 sourceTileOffset:(const int*)arg7;
- (void)resetStencilState;
- (void)setNeedsTileStencil:(bool)arg1;
- (bool)wantsCategorizedSourceTiles;

@end
