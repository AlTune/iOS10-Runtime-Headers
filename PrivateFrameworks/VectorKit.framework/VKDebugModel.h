/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKDebugModel : VKModelObject <VKMapLayer> {
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _debugLinesRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup> > > { 
            struct FragmentedPool<ggl::Debug::BasePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _debugPipelineSetupPool;
    struct shared_ptr<ggl::Debug::BasePipelineState> { 
        struct BasePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _debugPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup> > > { 
            struct FragmentedPool<ggl::DebugPoints::BasePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _debugPointsPipelineSetupPool;
    struct shared_ptr<ggl::DebugPoints::BasePipelineState> { 
        struct BasePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _debugPointsPipelineState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _debugPointsRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _debugRenderItemPool;
    float  _fontSize;
    bool  _geocentric;
    bool  _needsReset;
    struct shared_ptr<ggl::Debug::BaseMesh> { 
        struct BaseMesh {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _unitRectMesh;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool geocentric;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)appendDebugTileCommandsToBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; short x29; void*x30; const void*x31; BOOL x32; void*x33; void*x34; void*x35; void*x36; BOOL x37; out void*x38; void*x39; const void*x40; short x41; short x42; void*x43; double x44; void*x45; void*x46; void*x47; int x48; const void*x49; void*x50; void*x51; long x52; SEL x53; SEL x54; void*x55; const void*x56; void*x57; void*x58; void*x59; in void*x60; void*x61; double x62; void*x63; out out long x64; void*x65; void*x66; void*x67; long x68; SEL x69; SEL x70; void*x71; void*x72; in double x73; void*x74; const unsigned int x75; void*x76; void*x77; void*x78; void*x79; void*x80; char *x81; void*x82; void*x83; short x84; void*x85; double x86; SEL x87; SEL x88; void*x89; void*x90; void*x91; SEL x92; SEL x93; double x94; void*x95; float x96; void*x97; void*x98; long x99; void*x100; void*x101; double x102; void*x103; long x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; long x111; SEL x112; SEL x113; void*x114; const void*x115; void*x116; void*x117; void*x118; in void*x119; void*x120; double x121; void*x122; out out long x123; void*x124; void*x125; void*x126; long x127; SEL x128; SEL x129; void*x130; void*x131; in double x132; void*x133; const unsigned int x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; struct  
            struct FragmentedPool<ggl::RenderItem> { {} x144; void*x145; char *x146; void*x147; void*x148; float x149; int x150; const short x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; }*)arg1 forMapTile:(id)arg2 fromLayer:(unsigned long long)arg3 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 withConsole:(struct DebugConsole { int (**x1)(); struct Matrix<float, 2, 1> { float x_2_1_1[2]; } x2; struct Matrix<float, 2, 1> { float x_3_1_1[2]; } x3; struct Matrix<float, 2, 1> { float x_4_1_1[2]; } x4; struct Matrix<float, 2, 1> { float x_5_1_1[2]; } x5; unsigned long long x6; struct unique_ptr<ggl::RenderItem, std::__1::default_delete<ggl::RenderItem> > { struct __compressed_pair<ggl::RenderItem *, std::__1::default_delete<ggl::RenderItem> > { struct RenderItem {} *x_1_2_1; } x_7_1_1; } x7; struct unique_ptr<ggl::DataWrite<ggl::ColoredText::My>, std::__1::default_delete<ggl::DataWrite<ggl::ColoredText::My> > > { struct __compressed_pair<ggl::DataWrite<ggl::ColoredText::My> *, std::__1::default_delete<ggl::DataWrite<ggl::ColoredText::My> > > { struct DataWrite<ggl::ColoredText::My> {} *x_1_2_1; } x_8_1_1; } x8; unsigned long long x9; struct Matrix<float, 2, 1> {} *x10; struct Matrix<unsigned char, 4, 1> { unsigned char x_11_1_1[4]; } x11; struct Matrix<unsigned char, 4, 1> { unsigned char x_12_1_1[4]; } x12; float x13; struct CommonLibrary {} *x14; struct RenderTargetFormat { int x_15_1_1[4]; unsigned long long x_15_1_2; unsigned int x_15_1_3; int x_15_1_4; } x15; }*)arg5;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(bool)arg1;
- (void)flushPools;
- (bool)geocentric;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (unsigned long long)mapLayerPosition;
- (void)reset;
- (void)resetPools:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)setGeocentric:(bool)arg1;
- (bool)shouldLayoutWithoutStyleManager;
- (struct shared_ptr<ggl::Debug::BaseMesh> { struct BaseMesh {} *x1; struct __shared_weak_count {} *x2; })unitRectMesh;

@end
